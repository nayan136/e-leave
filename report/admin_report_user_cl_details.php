<?php
require_once("../FPDF/fpdf.php");
require_once("../db.php");
session_start();

class PDF extends FPDF
{
var $widths;
var $aligns;

// Page header
function Header()
{

  // Arial bold 15
  $this->SetFont('Arial','B',15);
  // Move to the right
  $this->Cell(80);
  // Title
  $this->Cell(30,10,'Cotton University','C');
  // Line break
  $this->Ln(10);
}

// Page footer
function Footer()
{
  // Position at 1.5 cm from bottom
  $this->SetY(-15);
  // Arial italic 8
  $this->SetFont('Arial','I',8);
  // Page number
  $this->Cell(0,10,'Page '.$this->PageNo().'/{nb}',0,0,'C');
}

function PageBody(){
  $department = ucwords($_SESSION["department"]);
  $department = "Department :".$department;
  $name = $_SESSION["full_name"];
  $name = 'Report generated by: '.ucwords($name);
  $date = 'Generated on: '.date("d/m/Y");
  $this->SetFont('Arial','BU',14);
  $this->Cell(200,10,'Report on CL',0,0,'C');
  $this->Ln(10);
  $this->SetFont('Arial','B',12);
  $this->Cell(200,10,$name);
  $this->Ln(5);
  $this->Cell(200,10,$date);
  $this->Ln(5);
  $this->SetFont('Arial','BU',12);
  $this->Cell(200,10,$department,0,0,'C');
  $this->Ln(10);
}

function allDates($begin, $end){
    $date = array();

      //$begin = date('Y-m-d', strtotime($begin .' -1 day'));
      $end = date('Y-m-d', strtotime($end .' +1 day'));

      $begin = new DateTime($begin);
      $end = new DateTime($end);

      $interval = new DateInterval('P1D');
      $dateRange = new DatePeriod($begin,$interval,$end);

      foreach ($dateRange as $date1) {
        $date[] = $date1->format("M d");
      }
  return $date;

}

// Load data
function LoadData($conn)
{
  $department = $_SESSION["department"];
  $temp_array = array();
  $i = 0;
    $query = "SELECT * FROM user WHERE department='{$department}' ";
    $get_all_user_by_dept = mysqli_query($conn,$query);
    while($row = mysqli_fetch_assoc($get_all_user_by_dept)){
      $i++;
      $id = $row["id"];
      $name = ucwords($row["full_name"]);
      $cl_left= $row["cl_left"];
      $query1 = "SELECT SUM(cl_days_leave)AS cl_used,status,GROUP_CONCAT(from_date,half_day)AS begin,GROUP_CONCAT(to_date)as end
                FROM history WHERE user_id='$id' AND status='approved' ";
      $result = mysqli_query($conn,$query1);

      while($row1 = mysqli_fetch_assoc($result)){
        $from_date = $row1["begin"];
        $to_date = $row1["end"];
        if(is_null($row1["cl_used"])){
          $cl_used = 0;
        }else{
          $cl_used = $row1["cl_used"];
        }
        // echo $from_date;
        // echo "<br>";

      }

      $date_by_user = array();
      $from_date_all = array();
      $date_shift = explode(",",$from_date);
      // print_r($date_shift);
      // echo "<br>";
      foreach($date_shift as $dates){
        $date1="";
        $date = str_split($dates,10);

        $date[0] = str_replace('/', '-', $date[0]);
        if($date[0] != ""){
          $date[0] = date("M d", strtotime($date[0]));
        }


        if(empty($date[1])){
            $date1 = $date[0];
        }else{
          $shift = $date[1];

          $date1 = $date[0]."(".ucfirst($shift[0]).")";
        }
        array_push($from_date_all,$date1);

      }

      $end_date_shift = explode(",",$to_date);
      $end_date_all = array();

      foreach($end_date_shift as $dates1){
        $end_date1="";
        array_push($end_date_all,$dates1);

      }

      $j=0;


      foreach($end_date_all as $date_end){

        if($date_end == "0000-00-00"){
          $approve_dates = $from_date_all[$j];

        }else{
          if($date_end != ""){
            $date_between = $this->allDates($from_date_all[$j], $date_end);

            $approve_dates = implode(",", $date_between);
          }else{
            $approve_dates = "";
          }


        }

        array_push($date_by_user,$approve_dates);
        $j++;
      }

      $approve_by_date = array();
      array_push($approve_by_date,$i,$name,$cl_used,implode(",", $date_by_user),$cl_left);

      array_push($temp_array,$approve_by_date);

    }

    return $temp_array;
}

//**********************************
function SetWidths($w)
{
    //Set the array of column widths
    $this->widths=$w;
}

function SetAligns($a)
{
    //Set the array of column alignments
    $this->aligns=$a;
}

function tableHead($header, $w){
  // Header
  $this->SetFont('Arial','B',12);

  for($i=0;$i<count($header);$i++){
    $this->Cell($w[$i],7,$header[$i],1,0,'C');
  }

  $this->Ln();
}

function Row($data)
{
    //Calculate the height of the row
    $nb=0;
    for($i=0;$i<count($data);$i++){
      $nb=max($nb,$this->NbLines($this->widths[$i],$data[$i]));
    }

    $h=6*$nb;
    //Issue a page break first if needed
    $this->CheckPageBreak($h);
    //Draw the cells of the row
    for($i=0;$i<count($data);$i++)
    {
        $w=$this->widths[$i];
        if($i == 0 || $i == 2 || $i==4){
          $a=isset($this->aligns[$i]) ? $this->aligns[$i] : 'C';
        }else{
          $a=isset($this->aligns[$i]) ? $this->aligns[$i] : 'L';
        }
        //Save the current position
        $x=$this->GetX();
        $y=$this->GetY();
        //Draw the border
        $this->Rect($x,$y,$w,$h);
        //Print the text
        $this->MultiCell($w,5,$data[$i],0,$a);
        //Put the position to the right of the cell
        $this->SetXY($x+$w,$y);
    }
    //Go to the next line
    $this->Ln($h);
}

function CheckPageBreak($h)
{
    //If the height h would cause an overflow, add a new page immediately
    if($this->GetY()+$h>$this->PageBreakTrigger)
        $this->AddPage($this->CurOrientation);
}

function NbLines($w,$txt)
{
    //Computes the number of lines a MultiCell of width w will take
    $cw=&$this->CurrentFont['cw'];
    if($w==0)
        $w=$this->w-$this->rMargin-$this->x;
    $wmax=($w-2*$this->cMargin)*1000/$this->FontSize;
    $s=str_replace("\r",'',$txt);
    $nb=strlen($s);
    if($nb>0 and $s[$nb-1]=="\n")
        $nb--;
    $sep=-1;
    $i=0;
    $j=0;
    $l=0;
    $nl=1;
    while($i<$nb)
    {
        $c=$s[$i];
        if($c=="\n")
        {
            $i++;
            $sep=-1;
            $j=$i;
            $l=0;
            $nl++;
            continue;
        }
        if($c==' ')
            $sep=$i;
        $l+=$cw[$c];
        if($l>$wmax)
        {
            if($sep==-1)
            {
                if($i==$j)
                    $i++;
            }
            else
                $i=$sep+1;
            $sep=-1;
            $j=$i;
            $l=0;
            $nl++;
        }
        else
            $i++;
    }
    return $nl;
}
}

$pdf=new PDF();
$pdf->AddPage();
$pdf->PageBody();
$w = array(15,55,20,80,20);
// Column headings
$header = array("Sl No.","Name","CL Used","CL Date","CL left");
$pdf->tableHead($header,$w);
//Table with 20 rows and 4 columns
$pdf->SetWidths($w);
$conn = $connection;
$data = $pdf->LoadData($conn);
$pdf->SetFont('Arial','',12);
foreach($data as $data1){
    //$temp = explode(",", $data1);
     $pdf->Row($data1);
}

$pdf->Output();
?>
